[buildout]
extensions +=
    mr.developer
extends =
    https://dist.plone.org/release/5.2.3-pending/versions.cfg
    versions.cfg

always-checkout = false
auto-checkout =
    ploneintranet

find-links +=
    https://dist.plone.org/release/5.2.3
    https://quaivepypi.syslab.com/packages/
show-picked-versions = true
newest = false
parts =
    supervisor
    pre_commit
    omelette
    test

[settings]
quaive_redis_url = redis://localhost:6379/0
hostname_default = localhost
hostname_switchlist = cms.localhost
solr_host = 0.0.0.0
solr_port = 8983
solr_basepath = /solr
zeo_address = ${buildout:directory}/components/zeo/var/zeo.socket

[instance]
recipe = plone.recipe.zope2instance
user = admin:admin
http-address = 8080
eggs =
    ploneintranet
    plone.reload
    iw.debug
zcml =
    ploneintranet
    ploneintranet.suite.tests.views
    plone.reload
    iw.debug
environment-vars =
    zope_i18n_compile_mo_files true
    ASYNC_ENABLED true
    BROKER_URL ${settings:quaive_redis_url}
    CELERY_RESULT_BACKEND ${settings:quaive_redis_url}
    DIAZO_ALWAYS_CACHE_RULES true
    PATH ${env:path}
    PTS_LANGUAGES en de it
deprecation-warnings = on
python-check-interval = 10000
wsgi-ini-template = ${buildout:directory}/templates/wsgi.ini
event-log-handler = logging.handlers.TimedRotatingFileHandler
event-log-args  = ("${buildout:directory}/var/log/${:_buildout_section_name_}.log",)
access-log-handler = logging.handlers.TimedRotatingFileHandler
access-log-args  = ("${buildout:directory}/var/log/${:_buildout_section_name_}-Z2.log",)
zeo-client = on
zeo-address =  ${settings:zeo_address}
shared-blob = on
blob-storage = ${buildout:directory}/components/zeo/var/blobstorage
zcml-additional =
    <configure xmlns="http://namespaces.zope.org/zope"
               xmlns:solr="http://namespaces.ploneintranet.org/search/solr">
        <include package="ploneintranet.search.solr" />
        <solr:connection
            host="${settings:solr_host}"
            port="${settings:solr_port}"
            basepath="${settings:solr_basepath}"
            core="core1"
         />
    </configure>

[scripts]
recipe = zc.recipe.egg
dependent-scripts = true
interpreter = zopepy
eggs = ${instance:eggs}

[code-analysis]
recipe = plone.recipe.codeanalysis
directory = ${buildout:directory}/src/ploneintranet/src/ploneintranet
flake8 = True
flake8-exclude = docs,pre-commit,plone.recipe.codeanalysis
flake8-extensions = flake8-debugger
flake8-ignore = C901,E203,W503
flake8-max-line-length = 88
multiprocessing = True
pre-commit-hook = False
return-status-codes = True

[pre_commit_config]
recipe = collective.recipe.template
input = ${buildout:directory}/templates/.pre-commit-config.yaml
output = ${buildout:directory}/src/ploneintranet/.pre-commit-config.yaml

[pre_commit]
=> pre_commit_config code-analysis
recipe = plone.recipe.command
command = cd ${buildout:directory}/src/ploneintranet && pre-commit install -f

[sources]
ploneintranet = git git@github.com:quaive/ploneintranet.git
quaive.resources.ploneintranet = git git@github.com:quaive/quaive.resources.ploneintranet.git
# rubygemsrecipe = hg https://bitbucket.org/sirex/rubygemsrecipe

[env]
recipe = mr.scripty
path=
    ... from os import environ
    ... environ['PATH'] += ':${buildout:directory}/bin'
    ... return environ['PATH']

[testenv]
PATH=${env:path}

[robot]
recipe = zc.recipe.egg
eggs =
    ${test:eggs}
    plone.app.robotframework[debug,reload]
environment = environment

[test]
=> robot
recipe = zc.recipe.testrunner
eggs =
    ploneintranet [test]
defaults = ["-c", "-p"]
environment = testenv

[omelette]
recipe = collective.recipe.omelette
eggs = ${instance:eggs}
ignores =
    bcrypt
    cffi
    cryptography

[supervisor]
# require scripts to have celery
=> scripts
recipe = collective.recipe.supervisor
http-socket = unix
file = ${buildout:directory}/var/supervisord.sock
programs =
    10 zeo ${buildout:directory}/components/zeo/parts/zeo/bin/runzeo ${buildout:directory}/components/zeo/parts/zeo/
    20 solr /usr/bin/env [java -Xms512m -Xmx2048m -jar start.jar --module=http jetty.host=0.0.0.0 jetty.port=${settings:solr_port}] ${buildout:directory}/components/solr/parts/solr true
    30 celery ${buildout:directory}/bin/celery [-A ploneintranet.asynctasks.celerytasks worker] ${buildout:directory}/var/ true
supervisord-environment=BROKER_URL="${settings:quaive_redis_url}",CELERY_RESULT_BACKEND="${settings:quaive_redis_url}"

[versions]
# Use the ones from the requirements
zc.buildout=
setuptools=
pip =
wheel =
# Additional eggs
plone.recipe.command = 1.1
